import re
import sqlite3
import streamlit as st
from transformers import pipeline

# Step 1: Data Preprocessing
def preprocess_text(text):
    text = re.sub(r'\s+', ' ', text)  # Replace multiple spaces with a single space
    text = re.sub(r'[^\w\s]', '', text)  # Remove special characters
    return text.strip()

# Step 2: Definitive Data Extraction
def extract_iocs(text):
    ip_pattern = r'\b(?:\d{1,3}\.){3}\d{1,3}\b'
    domain_pattern = r'\b(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,}\b'
    hash_pattern = r'\b[a-fA-F0-9]{32,}\b'

    iocs = {
        "IPs": re.findall(ip_pattern, text),
        "Domains": re.findall(domain_pattern, text),
        "Hashes": re.findall(hash_pattern, text)
    }
    return iocs

def extract_ttp_ids(text):
    ttp_pattern = r'\bT\d{4}(?:\.\d{3})?\b'
    return re.findall(ttp_pattern, text)

# Step 3: Cognitive Information Extraction
def extract_tactics_techniques(text):
    nlp = pipeline("text-classification", model="distilbert-base-uncased")
    results = nlp(text)
    return results

# Step 4: Interpretive Information Extraction
def extract_interpretive_info(text):
    if "phishing" in text.lower():
        return "Potential phishing campaign detected."
    return "No significant hidden meanings inferred."

# Step 5: Database Integration
def save_to_db(iocs, ttp_ids, tactics_techniques, interpretive_info):
    conn = sqlite3.connect("threat_intel.db")
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS extracted_data (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            iocs TEXT,
            ttp_ids TEXT,
            tactics_techniques TEXT,
            interpretive_info TEXT
        )
    ''')
    cursor.execute('''
        INSERT INTO extracted_data (iocs, ttp_ids, tactics_techniques, interpretive_info)
        VALUES (?, ?, ?, ?)
    ''', (str(iocs), str(ttp_ids), str(tactics_techniques), interpretive_info))
    conn.commit()
    conn.close()

# Step 6: Streamlit App
def main():
    st.title("MITRE ATT&CK Extractor")
    uploaded_file = st.file_uploader("Upload a Cyber Threat Report", type=["txt", "pdf"])

    if uploaded_file is not None:
        text = uploaded_file.read().decode("utf-8")
        st.write("### Preprocessed Text")
        text = preprocess_text(text)
        st.write(text)

        st.write("### Extracted IOCs")
        iocs = extract_iocs(text)
        st.write(iocs)

        st.write("### Extracted TTP IDs")
        ttp_ids = extract_ttp_ids(text)
        st.write(ttp_ids)

        st.write("### Extracted Tactics and Techniques")
        tactics_techniques = extract_tactics_techniques(text)
        st.write(tactics_techniques)

        st.write("### Interpretive Information")
        interpretive_info = extract_interpretive_info(text)
        st.write(interpretive_info)

        # Save to database
        save_to_db(iocs, ttp_ids, tactics_techniques, interpretive_info)
        st.success("Data saved to database!")

if _name_ == "_main_":
    main()